swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Accounts API
      description: API for fetching user accounts
      produces:
        - application/json
      responses:
        '200':
          description: Get Accounts Successfully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account Transactions API
      description: API for fetching user account transactions
      parameters:
        - in: path
          name: accountId
          description: targeted account id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Get Transactions Successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account Transaction Details API
      description: API for fetching transaction details from user account
      parameters:
        - in: path
          name: accountId
          description: targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: targeted transaction id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Get Transaction Details Successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Edit Transaction Category API
      description: API to edit a category to a select dropdown
      parameters:
        - in: path
          name: accountId
          description: targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: targeted transaction id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Category retrieved Successfully
          schema:
            $ref: '#/definitions/CategoryResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Add Transaction Note API
      description: API to add a transaction note
      parameters:
        - in: path
          name: accountId
          description: targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: targeted transaction id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Note retrieved Successfully
          schema:
            $ref: '#/definitions/NoteResponse'
        '401':
          description: Unauthorized
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionId}/note/{noteId}:
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Transaction Note API
      description: API to delete a transaction note
      parameters:
        - in: path
          name: accountId
          description: targeted account id
          type: number
          required: true
        - in: path
          name: transactionId
          description: targeted transaction id
          type: number
          required: true
        - in: path
          name: noteId
          description: targeted note id
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Note deleted Successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: The account ID
            title:
              type: string
              description: The account title
            amount:
              type: number
              description: The account amount
            amountDescription:
              type: string
              description: Specifies the balance
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            id: 
              type: string
              description: The transaction ID
            date:
              type: string
              format: date
              description: The transaction date
            description:
              type: string
              description: Specifies the transaction place
            amount:
              type: number
              description: Specifies the amount transaction
            balance: 
              type: number
              description: Specifies the balance
  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
              description: The detail transaction ID
            transaction type:
              type: string
              description: The transaction type
            category:
              type: string
              description: Transaction category
            note:
              type: string
              description: Transaction note
  CategoryResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          category:
            type: string
            description: Transaction category
  NoteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: The note ID
            note:
              type: string
              description: Transaction note